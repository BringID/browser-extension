import { NotarizationStatus, NotarizationHandler } from './types';
import { tasks, Task } from '../../../common/core';
import { NotarizationXProfile } from './handlers/x-profile';
import { NotarizationUberRides } from './handlers/uber-rides';
import { State } from '../../common/helpers/progressive';
import { Transcript } from 'tlsn-js';
import { notarizationSlice } from '../../store/notarization';
import { store } from '../../store';
import { NotarizationStravaPremium } from './handlers/strava-premium';
import { NotarizationAppleDevices } from './handlers/apple-devices';
import { NotarizationXVerifiedFollowers } from './handlers/x-verified-followers';

// NotarizationManager stores Notarization and handles Redux
export class NotarizationManager {
  readonly #notarizations: NotarizationHandler[] = [];
  #currentNotarization: NotarizationHandler | null = null;

  constructor(notarizations: NotarizationHandler[]) {
    this.#notarizations = notarizations;
  }

  async run(id: number): Promise<void> {
    if (
      this.#currentNotarization &&
      this.#currentNotarization.state.status === NotarizationStatus.InProgress
    ) {
      await this.#currentNotarization.stop();
    }
    store.dispatch(notarizationSlice.actions.setTaskId(id));

    this.#currentNotarization = this.#notarizations[id];

    await this.#currentNotarization.start(
      // TODO Presentation should be passed to popup
      async (res) => {
        console.log('RESULT: ', { res });
        if (res instanceof Error) {
          console.error(res);
          store.dispatch(notarizationSlice.actions.setError(res));
          return;
        }

        const presentation = await res.json();
        const verifierOutput = await res.verify();

        const transcript = new Transcript({
          sent: verifierOutput.transcript?.sent || [],
          recv: verifierOutput.transcript?.recv || [],
        });

        console.log('Transcript', {
          sent: transcript.sent(),
          recv: transcript.recv(),
        });

        store.dispatch(notarizationSlice.actions.setResult(presentation.data));
        store.dispatch(
          notarizationSlice.actions.setTranscriptRecv(transcript.recv()),
        );

        // mock for twitter
        //         const presentationData = '014000000000000000623d60b5049fe1c964108b9c39197e9987561ccaebe5920ab037f935fbab9d5d5a4d748eeb208384cbcd41214cf6d6e9c893510de3257a808d93a07e363cde1066ab90e6fc5c2119dc543df813c05dbb00000000022000000000000000ad5e17644d7c36dc25b4a5489075916ebde03a434dd453aabc8d541d5dcbf5ef000000000121000000000000000307ba0cd5dd87e93f3504f6d047339b9f68f44b7dbb4d3f4b4271a2c8b481b10601000000e444c96800000000000000005c0a0000400c000002000000000000004100000000000000044ab2d207c1b00dbf8d3ed8bd8d5f13808afe969f2dab2df6b972eeab9088929a26bc65b8cb189eaf9e97d0e7192a1990fbc2f066b67f046248a3d1fdb3baca0f0300000002200000000000000052a37706f7715acd1e9fd21230960295d3e6f00f6eec04a31d1577cc61ede28800000000000000000100000000000000040000000000000002200000000000000015c24f2615790ca014995b99710e47a56282abaf05b9234fe22a783319ee8760ca10315ba1ef001708654d6311ddbee08f2182bb571505c1507d249cb4e9ec70f3eb2c2de31a1eabba948a4cd01231ba02050000000000000000000000000000000109000000000000006170692e782e636f6d02000000000000009a03000000000000308203963082031ca0030201020212062dc2f2fb0a8dde94414d2324e4fb1b6e5c300a06082a8648ce3d0403033032310b300906035504061302555331163014060355040a130d4c6574277320456e6372797074310b3009060355040313024535301e170d3235303831393138343333335a170d3235313131373138343333325a3010310e300c06035504031305782e636f6d3059301306072a8648ce3d020106082a8648ce3d03010703420004628e54cced34783736fbc97bb896bf0cb0ba0e236e8153235b02bf726a17ce55b50d30cc3363d24f875190c942699edad0789675488e2f1e89f76671dd5d644ca38202323082022e300e0603551d0f0101ff040403020780301d0603551d250416301406082b0601050507030106082b06010505070302300c0603551d130101ff04023000301d0603551d0e04160414b0fe418c780947e57fa1fb62f49f8f83aaf490de301f0603551d230418301680149f2b5fcf3c214f9d04b7ed2b2cc4c6708bd2d70d303206082b0601050507010104263024302206082b060105050730028616687474703a2f2f65352e692e6c656e63722e6f72672f30300603551d110429302782072a2e782e636f6d821563646e2e73796e6469636174696f6e2e782e636f6d8205782e636f6d30130603551d20040c300a3008060667810c010201302d0603551d1f042630243022a020a01e861c687474703a2f2f65352e632e6c656e63722e6f72672f39332e63726c30820103060a2b06010401d6790204020481f40481f100ef007400ed3c4bd6e806c2a4a20057dbcb24e23801df512fedc486c5700f20ddb73e3fe000000198c3da5a580000040300453043021f19b1450ba8b263e3b8b4b31b942116d786c84cb3da70f3d7b5673b421c1b68022078637fad3af9aaae093b40f5ec796735e0357b66f5fb1905a55e22c64047ca2c0077000de1f2302bd30dc140621209ea552efc47747cb1d7e930ef0e421eb47e4eaa3400000198c3da621f0000040300483046022100b11ea7620ae52ea84de927e6eccb4af39638a9dc7941eba95ae729b3eefafbdd022100baad9acf5b7bf1edb046e4f83fbc358d25d32b1b504f89f5822ea9fb3dd686b1300a06082a8648ce3d040303036800306502305f12ea426c10f437299f90ecc11e9135bff338f6cf674b9f754db69f48152d76a0b23bc992dcbf0532b9cb5ef8fb53ef02310082a2a72aa278b72af1ae12b83f12680f0f6b4e42f293208afc14541646a545558c31e8384fd0ecf9eb4e6a38c356f5bc5b04000000000000308204573082023fa003020102021100838f6c63ceb1398c6206628315c9fdde300d06092a864886f70d01010b0500304f310b300906035504061302555331293027060355040a1320496e7465726e65742053656375726974792052657365617263682047726f7570311530130603550403130c4953524720526f6f74205831301e170d3234303331333030303030305a170d3237303331323233353935395a3032310b300906035504061302555331163014060355040a130d4c6574277320456e6372797074310b30090603550403130245353076301006072a8648ce3d020106052b81040022036200040d0b3a8a6b618eb6efdc5f58e7c6424554ab63f66661480a2e5975b481023750b73f1679dc98eca1289772201c2ccfd57c52204e54785b84146bc090ae85ecc051413c5a877f064dd4fe60d1fa6c2de17d951088a208540f991a4ce6ea0aacd8a381f83081f5300e0603551d0f0101ff040403020186301d0603551d250416301406082b0601050507030206082b0601050507030130120603551d130101ff040830060101ff020100301d0603551d0e041604149f2b5fcf3c214f9d04b7ed2b2cc4c6708bd2d70d301f0603551d2304183016801479b459e67bb6e5e40173800888c81a58f6e99b6e303206082b0601050507010104263024302206082b060105050730028616687474703a2f2f78312e692e6c656e63722e6f72672f30130603551d20040c300a3008060667810c01020130270603551d1f0420301e301ca01aa0188616687474703a2f2f78312e632e6c656e63722e6f72672f300d06092a864886f70d01010b050003820201001f729d34454241daa4d0b2b2b8d2264ca751258d42daec364896a3ba1aa4c863d8f02fb3cecb9f67e9a09e19ead40d8a550392ca43849d46f1d5ccbadfbac1022871f7bafe6dcc1b64ceac4c321a12b891fcf2e4e8b2acf417b4ba857180e2837291bdb2f0f7dc9f86f4b71fbf52bd96e0e6493806e9734520de6f7c8e60b3f94c3f2a2310c748ccaf5b95c976ff5bcac4ef16182723bec4359c9fcfc2df0b41905f385c955cff2e6c0a7f6aeddd73810a586f4c3b9cdcc75a93f7e3574467555b11af98115101a8dc88c7d7304d59b869a4dff18e92800ced992366695eca890fd4b1b399f25c51df6cede7aed7ff7f7a0e5795777fe791ad62300cf82e031b98bb79a36a726d85fb2c5820fb7a71b6ed6153490867c75aa1c44381584ad532167bfcb23caa53cca981968d27d69571648808b388135fd0bffee82ac9d909627ddbac14e91a86d4e60f18e8b5cee00184bc3ad5cb8f5434f6f27412fdeeb3f797095ead1e2b505c689e9f259b266e34600f9a779af11fe6f75033b30212f534b476ecc762399871c9a000476fc2950605a9fe571719689669e3b207b44ff8e7c3b6f8b63ac6a9c57895eef355b3b7cc96b4636358e829aaa69b272706f02ad780046edc8bb157ce4bae81f1aa647855f6358e173c4615e194827bc5473eb76b111936c082c6dd3fc41a648890261550c4a78e625d5500fd17a35affece65c27030000004700000000000000304502203255fd6ef8d10398346fe406691bcba247bba5dd35d7f6398ccd64c55c8ec026022100f7ddfa38b59f83ab64e7fd2cf065bec42f861ceff8b94f744000faac4e828a7f00000000a7d97e6a70bd9e9220714619e0c153ae70f87a87df9121ebc8408f96ded2215468c944e50fe0aa9d431f518aa855bea69ccd3b11af0ec7e1444f574e47524401000000004100000000000000044ab2d207c1b00dbf8d3ed8bd8d5f13808afe969f2dab2df6b972eeab9088929a26bc65b8cb189eaf9e97d0e7192a1990fbc2f066b67f046248a3d1fdb3baca0fe4e57669f21055c442a070a1d27f9601015c0a0000000000004745542068747470733a2f2f6170692e782e636f6d2f312e312f6163636f756e742f73657474696e67732e6a736f6e3f696e636c7564655f6578745f73686172696e675f617564696f7370616365735f6c697374656e696e675f646174615f776974685f666f6c6c6f776572733d7472756526696e636c7564655f6d656e74696f6e5f66696c7465723d7472756526696e636c7564655f6e7366775f757365725f666c61673d7472756526696e636c7564655f6e7366775f61646d696e5f666c61673d7472756526696e636c7564655f72616e6b65645f74696d656c696e653d7472756526696e636c7564655f616c745f746578745f636f6d706f73653d74727565266578743d73736f436f6e6e656374696f6e7326696e636c7564655f636f756e7472795f636f64653d7472756526696e636c7564655f6578745f646d5f6e7366775f6d656469615f66696c7465723d7472756520485454502f312e310d0a617574686f72697a6174696f6e3a20426561726572204141414141414141414141414141414141414141414e52494c674141414141416e4e77497a55656a52434f75483545364938786e5a7a3470755473253344315a76377474666b384c463831495571313663486a684c54764a753446413333414757576a4370546e410d0a6f726967696e3a2068747470733a2f2f782e636f6d0d0a782d78702d666f727761726465642d666f723ad0a7365632d66657463682d6d6f64653a20636f72730d0a782d637372662d746f6b656e3a20346632313661363666663961633839306439373263306639336265396564333331353261326261356539616636366634323936623235633639353332303838306637313636343364616265393763633230333338643962653866323634306330653331626138393730383065373338303462653637653765623866643963616331633630613864663138356162386466333861636262623563666231373633370d0a7365632d66657463682d646573743a20656d7074790d0a636f6f6b69653a206b64743d3078395851313156326f57554b6e61306f46597461304239384b4639314e776e39776474614d38333b20645f70726566733d4d546f784c474e76626e4e6c626e5266646d567963326c76626a6f794c48526c65485266646d567963326c76626a6f784d4441773b20706572736f6e616c697a6174696f6e5f69643d2276315f344d7a74796745494b4d42544e416a705179697834413d3d223b20646e743d313b205f5f637569643d38626662396365613062623134333134383136366133343736306661616130323b2067756573745f69643d76312533413137353532353535393937303838363630363b20617574685f746f6b656e3d646338383133643239323239616466613139643038613632643935633766656138666166353631353b206374303d346632313661363666663961633839306439373263306639336265396564333331353261326261356539616636366634323936623235633639353332303838306637313636343364616265393763633230333338643962653866323634306330653331626138393730383065373338303462653637653765623866643963616331633630613864663138356162386466333861636262623563666231373633373b20747769643d75253344313934333538393535373738373832303033323b2067756573745f69645f6164733d76312533413137353532353535393937303838363630363b2067756573745f69645f6d61726b6574696e673d76312533413137353532353535393937303838363630363b205f5f63665f626d3d723775426f67686456496d5f6b4970326151755f7a664f634e376b444a674f5834493148347139546c6b6b2d313735383031393634322d312e302e312e312d733644596b306144773569417573796d30304c7a4f50466964316e5678336b61616331474c624272766a6453336d36546a69684570595736617a416956684934665f62456a77494e7168655655677658475263532e39615373302e6e6e6165646c613965704a6e326267410d0a7365632d63682d75613a20224e6f743b413d4272616e64223b763d223939222c2022476f6f676c65204368726f6d65223b763d22313339222c20224368726f6d69756d223b763d22313339220d0a6163636570742d6c616e67756167653a2072752d52552c72753b713d302e392c656e2d55533b713d302e382c656e3b713d302e370d0a7365632d63682d75612d706c6174666f726d3a20226d61634f53220d0a782d747769747465722d6163746976652d757365723a207965730d0a636f6e6e656374696f6e3a20636c6f73650d0a6163636570743a202a2f2a0d0a7365632d66657463682d736974653a2073616d652d736974650d0a757365722d6167656e743a204d6f7a696c6c612f352e3020284d6163696e746f73683b20496e74656c204d6163204f5320582031305f31355f3729204170706c655765624b69742f3533372e333620284b48544d4c2c206c696b65204765636b6f29204368726f6d652f3133392e302e302e30205361666172692f3533372e33360d0a782d747769747465722d617574682d747970653a204f417574683253657373696f6e0d0a782d636c69656e742d7472616e73616374696f6e2d69643a207a6f62724a3548697a636e707a6b61676b7a6a38326f6739446c586e4333344835657049556762695a616c2f6a543668767964517641592b7257513074796e69564777517438714f4833752f4a39675136434b6e5447626d736b6a777a510d0a686f73743a206170692e782e636f6d0d0a726566657265723a2068747470733a2f2f782e636f6d2f0d0a7365632d63682d75612d6d6f62696c653a203f300d0a782d747769747465722d636c69656e742d6c616e67756167653a20656e0d0a0d0a2b00000000000000485454502f312e3120323030204f4b0d0a2273637265656e5f6e616d65223a22737061636568617a363622010000000000000000000000000000005c0a00000000000002000000000000000000000000000000110000000000000005070000000000001f070000000000005c0a000000000000400c0000000000000102030000000000000000000000000000000300000000000000010000000000000000000000010000000000000000000000000000005c0a0000000000000b6a6974cc54fe4daa25cd13c34183c4000000000000000001000000010000000000000000000000000000001100000000000000af91294e57cf32c8c38dddf24c0b7549020000000000000001000000010000000000000005070000000000001f070000000000009506932991c257b274c10da74d7891750000000000000000'
        //         const transcript = `HTTP/1.1 200 OK
screen_name":"spacehaz`

        //         store.dispatch(notarizationSlice.actions.setResult(presentationData));
        //         store.dispatch(notarizationSlice.actions.setTranscriptRecv(transcript));
      },
      this.notificationHandler.bind(this),
      this.currentStepUpdateHandler.bind(this),
    );
  }

  notificationHandler(state: State<NotarizationStatus>) {
    console.log('State updated:', state);
    store.dispatch(notarizationSlice.actions.setProgress(state.progress));
    //
  }

  currentStepUpdateHandler(currentStep: number) {
    store.dispatch(notarizationSlice.actions.setCurrentStep(currentStep));
  }
}

const t: Task[] = tasks();

export const notarizationManager = new NotarizationManager([
  new NotarizationXProfile(t[0]),
  new NotarizationUberRides(t[1]),
  new NotarizationXVerifiedFollowers(t[2]),
  new NotarizationAppleDevices(t[3]),
]);
